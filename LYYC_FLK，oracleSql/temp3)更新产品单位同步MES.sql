

-----#####禁用约束，约束名可从“各种有用的容易使用到的.sql文件”查找
/*
UPDATE WM_STORAGEU SET PRODUCT_CODEU='TEST_TEST' WHERE PRODUCT_CODEU='P0003'; ----只能更新主键引用表，被引用表的CODE不能更改
SELECT * FROM  C##FUSION.WM_PALLETU;
----新箱皮要改成 箱皮(芒果) 箱皮(新版银河) 箱皮(天行健)
SELECT * FROM WM_STORAGEU TB_A inner join WM_PALLETU TB_B ON TB_B.IDU= TB_A.PALLET_IDU WHERE PRODUCT_CODEU = '03140100000000248';
SELECT * FROM TM_TASK_DETAILU WHERE PRODUCT_CODEU='03140100000000248';
----查找库存中还没使用的产品编码
SELECT * FROM BI_PRODUCTU TB_A
  LEFT JOIN WM_STORAGEU TB_B ON TB_B.PRODUCT_CODEU = TB_A.PRODUCT_CODEU
  WHERE TB_B.PRODUCT_CODEU IS NULL;
--*/
  
  
--/*可以的话，先清除关联到产品编码的Task、Machine_pallet_detail、Machine_return、Machine_Handover等等
--*/
----根据WM_PALLETU的BRAND_CODESU更改纸箱的类别
--SELECT * FROM WM_PALLETU WHERE MATCH_PALLET_CODEU IN ('HQQMG-2001', 'HQQXBYH-2001', 'HQQTXJ-2001');
--SELECT * FROM BI_MATCH_PALLET_DETAILU WHERE MATCH_PALLET_CODEU='HQQMG-2001';

create or replace function F_A1
return varchar2
is
  V_A VARCHAR2(100);
  V_B VARCHAR2(100);
begin

  ----连BI_PRODUCTU也要更改
  V_A := 'XBYHSCHSYYX';
  V_B := '03140100000000248XBYH';
  UPDATE BI_MATCH_PALLET_DETAILU SET PRODUCT_CODEU=V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE WM_STORAGEU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE BI_PRODUCT_UNITU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE BI_PRODUCTU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  
  ----连BI_PRODUCTU也要更改
  V_A := '03140100100000198';
  V_B := '03140100000000248TXG';
  UPDATE BI_MATCH_PALLET_DETAILU SET PRODUCT_CODEU=V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE WM_STORAGEU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE BI_PRODUCT_UNITU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE BI_PRODUCTU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  ----连BI_PRODUCTU也要更改
  V_A := 'HQQMGHSYX';
  V_B := '03140100000000248MG';
  UPDATE BI_MATCH_PALLET_DETAILU SET PRODUCT_CODEU=V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE WM_STORAGEU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE BI_PRODUCT_UNITU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  UPDATE BI_PRODUCTU SET PRODUCT_CODEU= V_A WHERE PRODUCT_CODEU=V_B;
  
  return '^_^';
  Exception when others then
    raise;
end;
/
alter table BI_PRODUCT_UNITU disable constraint FK_BI_PRODUCT_UNITU_1434066075;
/
set serveroutput on;
declare
  v_temp varchar2(50);
begin
  v_temp := F_A1();
  dbms_output.put_line(v_temp);
  --rollback;
  commit;
  Exception when others then
    rollback;
    raise;
end;
/
drop function F_A1;
alter table BI_PRODUCT_UNITU ENABLE constraint FK_BI_PRODUCT_UNITU_1434066075;
/


